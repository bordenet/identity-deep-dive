# Identity Deep Dive - Environment Variables
# Copy this file to .env and fill in your actual values
# NEVER commit .env to git - it contains secrets!

# ============================================================================
# JWT Configuration
# ============================================================================

# Path to JWT private key (RSA 2048-bit for signing tokens)
# Generated by setup.sh or manually: openssl genrsa -out .secrets/jwt-private.pem 2048
JWT_PRIVATE_KEY_PATH=.secrets/jwt-private.pem

# Path to JWT public key (for token verification)
# Generated by setup.sh or manually: openssl rsa -in .secrets/jwt-private.pem -pubout -out .secrets/jwt-public.pem
JWT_PUBLIC_KEY_PATH=.secrets/jwt-public.pem

# JWT signing algorithm (RS256 recommended for production)
JWT_ALGORITHM=RS256

# JWT token expiration times
JWT_ACCESS_TOKEN_TTL=15m          # Access token lifetime (15 minutes)
JWT_REFRESH_TOKEN_TTL=720h        # Refresh token lifetime (30 days)
JWT_ID_TOKEN_TTL=1h               # OIDC ID token lifetime (1 hour)

# JWT issuer (your identity server URL)
JWT_ISSUER=http://localhost:8080

# ============================================================================
# Redis Configuration
# ============================================================================

# Redis connection string for local development
REDIS_URL=redis://localhost:6379

# Redis password (leave empty for local development)
REDIS_PASSWORD=

# Redis database number (0-15)
REDIS_DB=0

# Redis key prefix for session data
REDIS_KEY_PREFIX=identity:

# Redis connection pool settings
REDIS_MAX_CONNECTIONS=10
REDIS_MAX_IDLE_CONNECTIONS=5

# ============================================================================
# OAuth2/OIDC Server Configuration
# ============================================================================

# Server bind address and port
SERVER_HOST=localhost
SERVER_PORT=8080

# OAuth2 client credentials (for testing)
# In production, these would be stored in a database
OAUTH2_CLIENT_ID=demo-client
OAUTH2_CLIENT_SECRET=demo-secret-change-in-production

# OIDC UserInfo endpoint encryption key (AES-256)
# Generated by: openssl rand -hex 32
OIDC_USERINFO_ENCRYPTION_KEY=changeme-generate-random-32-byte-hex-key

# Allowed redirect URIs (comma-separated)
OAUTH2_REDIRECT_URIS=http://localhost:3000/callback,http://localhost:8080/callback

# PKCE enforcement (true/false)
OAUTH2_REQUIRE_PKCE=true

# ============================================================================
# Session Management Configuration
# ============================================================================

# Session secret for HMAC signing (generate with: openssl rand -hex 32)
SESSION_SECRET=changeme-generate-random-32-byte-hex-key

# Session cookie settings
SESSION_COOKIE_NAME=session_id
SESSION_COOKIE_SECURE=false        # Set to true in production with HTTPS
SESSION_COOKIE_HTTP_ONLY=true
SESSION_COOKIE_SAME_SITE=Lax

# Session timeout (in seconds)
SESSION_TIMEOUT=3600               # 1 hour

# ============================================================================
# Multi-Tenant Configuration
# ============================================================================

# Tenant-specific signing keys (JSON array format)
# Each tenant should have its own JWT signing key for isolation
# Example: [{"tenant_id":"tenant1","key_path":".secrets/tenant1-private.pem"},{"tenant_id":"tenant2","key_path":".secrets/tenant2-private.pem"}]
TENANT_SIGNING_KEYS=[]

# Default tenant ID (for single-tenant mode)
DEFAULT_TENANT_ID=default

# ============================================================================
# Security Scanner Configuration
# ============================================================================

# Scanner API key (if scanning external services)
SCANNER_API_KEY=

# Scanner report output directory
SCANNER_OUTPUT_DIR=./scan-results

# Scanner severity threshold (CRITICAL, HIGH, MEDIUM, LOW)
SCANNER_SEVERITY_THRESHOLD=MEDIUM

# ============================================================================
# Observability Configuration
# ============================================================================

# Prometheus metrics endpoint
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090

# Grafana configuration
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=changeme-generate-strong-password

# Log level (DEBUG, INFO, WARN, ERROR)
LOG_LEVEL=INFO

# Log format (json, text)
LOG_FORMAT=json

# ============================================================================
# Load Testing Configuration (k6)
# ============================================================================

# k6 test duration
K6_DURATION=5m

# k6 virtual users (concurrent sessions)
K6_VUS=100

# k6 target host
K6_TARGET_HOST=http://localhost:8080

# ============================================================================
# Database Configuration (if used)
# ============================================================================

# PostgreSQL connection string (if used for persistence)
# DATABASE_URL=postgresql://user:password@localhost:5432/identity_db

# ============================================================================
# SAML Configuration (Project 3b - Runtime Scanner)
# ============================================================================

# SAML IdP certificate path (for testing SAML flows)
# SAML_IDP_CERT_PATH=.secrets/saml-idp.crt

# SAML IdP private key path
# SAML_IDP_KEY_PATH=.secrets/saml-idp.key

# SAML SP entity ID
# SAML_SP_ENTITY_ID=http://localhost:8080/saml/metadata

# ============================================================================
# Development Settings
# ============================================================================

# Enable debug mode (verbose logging, detailed error messages)
DEBUG=false

# Enable hot reload (for development)
HOT_RELOAD=false

# Disable TLS verification (for local development only)
TLS_SKIP_VERIFY=false

# ============================================================================
# CI/CD Settings
# ============================================================================

# GitHub token (for scanner GitHub Actions integration)
# GITHUB_TOKEN=

# GitGuardian API key (for ggshield secret scanning)
# GITGUARDIAN_API_KEY=
